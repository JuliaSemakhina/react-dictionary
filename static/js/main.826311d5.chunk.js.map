{"version":3,"sources":["Word.js","App.js","reportWebVitals.js","index.js"],"names":["Word","title","source","examples","definition","synon","speech","className","map","line","controls","src","App","useState","query","setQuery","words","setWords","audios","setAudio","setExample","synonyms","setSynonym","getWord","e","a","preventDefault","api","key","i","Math","floor","random","Promise","all","fetch","then","responses","response","json","data","console","log","catch","error","alert","onSubmit","onChange","target","value","trim","toLowerCase","type","required","placeholder","aria-label","id","icon","faSearch","word","partOfSpeech","fileUrl","text","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.826311d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Word =({title, source, examples, definition, synon, speech})=> {\r\n\treturn (\r\n\t<section className=\"output\">\r\n\t<div>\r\n\t\t<h1>Searched word:</h1>\r\n\t\t<p>{title}</p>\r\n\t\t<p className=\"speech\">{speech}</p>\r\n\t</div>\r\n\t<div>\r\n\t\t<h1>Definition:</h1>\r\n\t\t<p>{definition}</p>\r\n\t</div>\r\n\t<div>\r\n\t\t<h1>Example:</h1>\r\n\t\t<p>{examples}</p>\r\n\t</div>\r\n\t<div>\r\n\t\t<h1>Synonyms:</h1>\r\n\t   <div>\r\n\t\t<ul className=\"synonyms\">\r\n\t\t{synon.map(line=> (\r\n\t\t\t<li>{line}</li>\r\n\t\t))}\r\n\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n\t<div>\r\n\t\t<h1>Pronounciation:</h1>\r\n\t\t<audio controls=\"controls\" src={source}></audio>\r\n\t</div>\r\n\t</section>\r\n\t\t);\r\n}\r\n\r\nexport default Word;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Word from './Word';\nimport './App.css';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\n  //States\n  const [query, setQuery] = useState('');\n  const [words, setWords] = useState([]);\n  const [audios, setAudio] = useState([]);\n  const [examples, setExample] = useState([]);\n  const [synonyms, setSynonym] = useState([]);\n\n\nconst getWord = async (e)=> {\n  e.preventDefault();\n\n  var api = 'https://api.wordnik.com/v4/word.json/';\n  var key = 'ag99rn7f4gdd82rlrrcxdd1p6yaxw6hbogitsadptvg5221d8';\n  var i = Math.floor(Math.random()*9);\n\n  Promise.all([fetch(`${api}${query}/definitions?limit=10&includeRelated=true&sourceDictionaries=all&useCanonical=true&includeTags=false&api_key=${key}`),\n  fetch(`${api}${query}/examples?includeDuplicates=false&useCanonical=true&limit=10&api_key=${key}`), \n  fetch(`${api}${query}/relatedWords?useCanonical=true&relationshipTypes=synonym&limitPerRelationshipType=10&api_key=${key}`),\n  fetch(`${api}${query}/audio?useCanonical=true&limit=10&api_key=${key}`)\n  ])\n  \n  .then(responses=>{\n    return Promise.all(responses.map(function (response) {\n      return response.json();\n    }));\n  })\n  .then(data=>{\n    setWords(data[0][i]);\n    setExample(data[1].examples[i]);\n    setSynonym(data[2][0].words);\n    setAudio(data[3][0]);\n    console.log(data[0][i]);\n    console.log(data[3]);\n    console.log(data[2][0]);\n  }\n  )\n  .catch(function (error) {\n    alert('Please enter a search word');\n  })\n\n}\n\nconst updateSearch = (e) => {\n  setQuery(e.target.value.trim().toLowerCase());\n}\n\n\n  return (\n    <div className='App'>\n    <div className='header'>\n      <div className='search-bar'>\n        <h1>Dictionary App</h1>\n        \n        <form onSubmit={getWord} className=\"submit-field\">\n           <input\n           onChange={updateSearch} \n           value={query}\n           className=\"search-bar__input\"\n           type=\"search\"\n           required\n           placeholder=\"enter a word\" \n           aria-label=\"search\"/>\n           <button          \n           id=\"submit\" \n           className=\"search-bar__submit\"\n           type=\"submit\">\n           <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n      </div>  \n</div>\n        \n      <Word title={words.word}\n                speech={words.partOfSpeech} \n                source={audios.fileUrl}\n                definition= {words.text}\n                examples = {examples.text}\n                synon = {synonyms}\n                key={words.id}\n          />\n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}